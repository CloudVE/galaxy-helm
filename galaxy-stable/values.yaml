# Default values for galaxy-stable.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

# The data folder used by the galaxy and proftpd containers
export_dir: "/export"

galaxy:
    # brand name displayed in Galaxy header
    brand: "k8s"

    # Settings for the init image
    init:
      image:
        repository: pcm32/galaxy-stable-k8s-init
        tag: latest
        pullPolicy: IfNotPresent
      resources: {}

    image:
      repository: pcm32/galaxy-stable-k8s
      tag: latest
      pullPolicy: IfNotPresent

    # Probably not needed as all on /export
    tools:
      destination: "/export/tools"

    # Settings for k8s job runner
    k8s:
      supp_groups:
      fs_group:

    # Admin user settings
    admin:
      email:
      password:
      api_key:
      username: admin
      allow_user_creation: "True"

    # Email settings
    smtp:
      server:
      username:
      password:
      email_from:
      ssl:

    # Ftp server settings
    ftp:
      url:
    instance_resource_url:
    # development_folder:

## Persist data to a persistent volume
persistence:
  enabled: true
  name: &pvcname galaxy-pvc

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true

  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteMany
  size: 15Gi
  subPath: ""

  # annotations: {}

service:
  type: ClusterIP
  port: 80
  # Only effective if service.type is NodePort
  node_port_exposed: 30700

pv_minikube: false
external_ingress_controller: false 
ingress:
  enabled: false
  domain: "local"
  path: /
  # Used to create Ingress record (should used with service.type: ClusterIP).
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - galaxy
  tls: []
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious 
  # choice for the user. This also increases chances charts run on environments with little 
  # resources, such as Minikube. If you do want to specify resources, uncomment the following 
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  #requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  image: "pcm32/galaxy-postgres"
  imageTag: "9.6.5_for_18.01"
  postgresDatabase: "galaxydb"
  postgresUser: "galaxy"
  postgresPassword: "change-me"
  persistence:
    existingClaim: *pvcname
    subPath: "postgres"

rbac_needed: false

condor:
  enabled: false

proftpd:
  enabled: true
  replicaCount: 1
  image: 
    repository: "container-registry.phenomenal-h2020.eu/phnmnl/galaxy-proftpd"
    tag: "for_galaxy_v17.09"
    pullPolicy: IfNotPresent
  passive_port:
    low: 30000
    high: 30010
  use_sftp: true
  generate_ssh_key: false
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: NodePort
    port: 22
    # Only effective if service.type is NodePort
    node_port_exposed: 30722
